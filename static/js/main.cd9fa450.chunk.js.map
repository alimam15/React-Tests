{"version":3,"sources":["components/img sync /^/.//.*/.jpg$","components/img/zombie1.jpg","components/img/zombie10.jpg","components/img/zombie2.jpg","components/img/zombie3.jpg","components/img/zombie4.jpg","components/img/zombie5.jpg","components/img/zombie6.jpg","components/img/zombie7.jpg","components/img/zombie8.jpg","components/img/zombie9.jpg","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","zombies.js","containers/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Card","name","image","email","className","class","alt","src","require","width","height","CardList","zombies","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","children","username","App","onSearchChange","event","setState","target","value","state","filteredZombies","this","filter","zombie","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd9fa450.chunk.js","sourcesContent":["var map = {\n\t\"./zombie1.jpg\": 15,\n\t\"./zombie10.jpg\": 16,\n\t\"./zombie2.jpg\": 17,\n\t\"./zombie3.jpg\": 18,\n\t\"./zombie4.jpg\": 19,\n\t\"./zombie5.jpg\": 20,\n\t\"./zombie6.jpg\": 21,\n\t\"./zombie7.jpg\": 22,\n\t\"./zombie8.jpg\": 23,\n\t\"./zombie9.jpg\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","module.exports = __webpack_public_path__ + \"static/media/zombie1.1644f7a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie10.ff80d5c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie2.3ab009d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie3.402f4d93.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie4.b006dc9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie5.7a27d712.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie6.12a6e3ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie7.9add9c71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie8.20b5e908.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie9.f0ea1e43.jpg\";","import React from 'react';\n//import zombie1 from './img/zombie1.jpg';\n//import zombie2 from './img/zombie2.jpg';\n//import zombie3 from './img/zombie3.jpg';\n//import images from './'\n\nconst Card = ({id, name, image, email}) =>{\n\treturn(\n\t\t<div className = 'tc dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t<img class='fancyImage' alt='zombie 1' src={require('./img/' + image + '.jpg')} width={200} height={200} />\n\t\t<div>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\n//import zombies from './zombies';\n\nconst CardList = ({zombies}) => {\n\n\t\t\n\t\treturn(\n\t\t\t<div>\n\t\t\t{zombies.map((user,i)=>{\n\t\t\treturn (\n\t\t\t\t<Card  \n\t\t\t\t\tkey={i}\n\t\t\t\t\tid={zombies[i].id} \n\t\t\t\t\tname={zombies[i].name}\n\t\t\t\t\timage={zombies[i].image}\n\t\t\t\t\temail={zombies[i].email} \n\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t</div>\n\n\t\t);\n\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\n\treturn(\n\t\t<div className='pa2'>\n\t\t\t<input className='pa3 pa b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='search for zombies'\n\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","export const zombies = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    image: 'zombie1',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    image: 'zombie2',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    image: 'zombie3',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    image: 'zombie4',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    image: 'zombie5',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    image: 'zombie6',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    image: 'zombie7',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    image: 'zombie8',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    image: 'zombie9',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    image: 'zombie10',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport {zombies} from '../zombies';\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tzombies: zombies,\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tonSearchChange = (event) =>{\n\t\tthis.setState({ searchfield: event.target.value})\n\t\t\n\t\t\n\t\t//console.log(filterZombies);\n\t}\n\n\trender() {\n\t\t\tconst filteredZombies = this.state.zombies.filter(zombie => {\n\t\t\t\treturn zombie.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t\t})\n\t\treturn(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1>Zombies are funny</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t  <Scroll>\n\t\t\t\t  \t<CardList zombies={filteredZombies} />\n\t\t\t\t  </Scroll>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}